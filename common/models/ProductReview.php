<?php

namespace common\models;

use Yii;
use \common\models\base\ProductReview as BaseProductReview;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "product_review".
 */
class ProductReview extends BaseProductReview
{

    public function behaviors()
    {
        return ArrayHelper::merge(
            parent::behaviors(),
            [
                # custom behaviors
            ]
        );
    }

    public function rules()
    {
        return [
            [['text'], 'string'],
            [['date'], 'safe'],
            [['active', 'product_id', 'sort_order'], 'integer'],
            [['name'], 'string', 'max' => 255]
        ];
    }

    public function afterFind()
    {
        if (empty($this->date)) {
            $this->date = date('d.m.Y');
        } else {
            $this->date = date('d.m.Y', $this->date);
        }

        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    public function beforeDelete()
    {
        //Удаляем старые изображения
        $firstPartOfFilename = basename(explode('.', $this->image)[0]);

        $uploadPath = Yii::getAlias('@uploadPath');
        $uploadPaths = glob($uploadPath . '/*');

        foreach ($uploadPaths as $fileItem) {
            if (is_file($fileItem)) {
                if (strstr($fileItem, $firstPartOfFilename)) {
                    unlink($fileItem);
                }
            }
        }

        $thumbsPath = Yii::getAlias('@thumbsPath');
        $thumbsPaths = glob($thumbsPath . '/*');

        foreach ($thumbsPaths as $fileItem) {
            if (is_file($fileItem)) {
                if (strstr($fileItem, $firstPartOfFilename)) {
                    unlink($fileItem);
                }
            }
        }
        //Удаляем старые изображения END

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}
